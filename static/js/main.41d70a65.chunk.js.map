{"version":3,"sources":["services/fakeInventoryService.js","components/edit.jsx","components/search.jsx","components/toggle.jsx","components/inventory.jsx","App.js","reportWebVitals.js","index.js"],"names":["Inventory","_id","name","details","color","options","skuid","stocks","isToggle","getInventory","Edit","className","Search","this","props","value","handleSearch","error","Fragment","type","onChange","e","currentTarget","placeholder","Component","Toggle","handleToggle","classes","onClick","state","inventories","searchValue","errors","schema","Joi","string","required","label","componentDidMount","setState","fruit","forEach","inventory","fruits","index","indexOf","validateProperty","obj","validate","message","errorMessage","allInventories","map","element","filter","subElement","toLowerCase","startsWith","query","id","sub","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41d70a65.chunk.js","sourcesContent":["const Inventory = [\r\n    {\r\n        _id: \"001\",\r\n        name: \"Fruits\",\r\n        details: [\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471819\",\r\n                name: \"Mango\",\r\n                color: \"#008121\",\r\n                options: \"large\",\r\n                skuid: \"SKU\",\r\n                stocks: 24,\r\n                isToggle: true\r\n            },\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471810\",\r\n                name: \"Orange\",\r\n                color: \"#008121\",\r\n                options: \"Small\",\r\n                skuid: \"SKU\",\r\n                stocks: 24\r\n            },\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471811\",\r\n                name: \"Grapes\",\r\n                color: \"#008121\",\r\n                options: \"Medium\",\r\n                skuid: \"SKU\",\r\n                stocks: 24\r\n            },\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471812\",\r\n                name: \"Water Millon\",\r\n                color: \"#008121\",\r\n                options: \"large\",\r\n                skuid: \"SKU\",\r\n                stocks: 24\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        _id: \"002\",\r\n        name: \"Vegetables\",\r\n        details: [\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471815\",\r\n                name: \"Cucumber\",\r\n                color: \"#008121\",\r\n                options: \"large\",\r\n                skuid: \"SKU\",\r\n                stocks: 24\r\n            },\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471816\",\r\n                name: \"Green Chilli\",\r\n                color: \"#008121\",\r\n                options: \"Small\",\r\n                skuid: \"SKU\",\r\n                stocks: 24\r\n            },\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471817\",\r\n                name: \"Carrot\",\r\n                color: \"#008121\",\r\n                options: \"Medium\",\r\n                skuid: \"SKU\",\r\n                stocks: 24\r\n            },\r\n            {\r\n                _id: \"5b21ca3eeb7f6fbccd471818\",\r\n                name: \"Potato\",\r\n                color: \"#008121\",\r\n                options: \"large\",\r\n                skuid: \"SKU\",\r\n                stocks: 24\r\n            }\r\n        ]\r\n    },\r\n];\r\n\r\nexport function getInventory() {\r\n    return Inventory;\r\n}\r\n","const Edit = () => {\r\n  return <i className=\"fa fa-pencil cursor-pointer\" aria-hidden=\"true\"></i>;\r\n};\r\n\r\nexport default Edit;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    const { value, handleSearch, error } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control m-2\"\r\n          name=\"query\"\r\n          onChange={(e) => {\r\n            handleSearch(e.currentTarget.value);\r\n          }}\r\n          value={value}\r\n          placeholder=\"Enter the name of the Inventory\"\r\n        />\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","const Toggle = ({isToggle,handleToggle}) => {\r\n    let classes = \"fa fa-toggle-\";\r\n    classes += isToggle ? \"on\" : \"off\";\r\n    return (\r\n        <i className={classes} aria-hidden=\"true\" onClick={handleToggle}></i>\r\n      );\r\n}\r\n \r\nexport default Toggle;","import React, { Component } from \"react\";\r\nimport { getInventory } from \"../services/fakeInventoryService\";\r\nimport Edit from \"./edit\";\r\nimport Search from \"./search\";\r\nimport Toggle from \"./toggle\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass Inventory extends Component {\r\n  state = {\r\n    inventories: [],\r\n    searchValue: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    searchValue: Joi.string().required().label(\"Search Value\"),\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const inventories = getInventory();\r\n    this.setState({ inventories });\r\n  };\r\n\r\n  handleToggle = (fruit) => {\r\n    const fruits = \"Fruits\";\r\n    const inventories = [...this.state.inventories];\r\n    inventories.forEach((inventory) => {\r\n      if (inventory.name === fruits) {\r\n        const fruits = [...inventory.details];\r\n        const index = fruits.indexOf(fruit);\r\n        fruits[index].isToggle = !fruits[index].isToggle;\r\n        this.setState({ fruits });\r\n      }\r\n    });\r\n  };\r\n\r\n  validateProperty = (value) => {\r\n    const obj = { searchValue: value };\r\n    const { error } = Joi.validate(obj, this.schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSearch = (searchValue) => {\r\n    const errors = {};\r\n    const errorMessage = this.validateProperty(searchValue);\r\n    if (errorMessage) errors[\"query\"] = errorMessage;\r\n    else delete errors[\"query\"];\r\n\r\n    this.setState({ searchValue, errors });\r\n  };\r\n\r\n  render() {\r\n    const { inventories, searchValue } = this.state;\r\n    const fruits = \"Fruits\";\r\n    const vegetables = \"Vegetables\";\r\n\r\n    let allInventories = inventories;\r\n\r\n    allInventories = searchValue\r\n      ? inventories.map((element) => {\r\n          return {\r\n            ...element,\r\n            details: element.details.filter((subElement) =>\r\n              subElement.name\r\n                .toLowerCase()\r\n                .startsWith(searchValue.toLowerCase())\r\n            ),\r\n          };\r\n        })\r\n      : inventories;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Search\r\n          value={searchValue}\r\n          handleSearch={this.handleSearch}\r\n          error={this.state.errors.query}\r\n        ></Search>\r\n        <div className=\"accordion m-2\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                Vegetables\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Item Name</th>\r\n                      <th>Color</th>\r\n                      <th>Options</th>\r\n                      <th>SKU ID</th>\r\n                      <th>Stocks</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {allInventories.map((inventory) => (\r\n                    <tbody key={inventory._id}>\r\n                      {inventory.name === vegetables &&\r\n                        inventory.details.map((sub) => (\r\n                          <tr key={sub._id}>\r\n                            <td>{sub.name}</td>\r\n                            <td>{sub.color}</td>\r\n                            <td>{sub.options}</td>\r\n                            <td>{sub.skuid}</td>\r\n                            <td>{sub.stocks}</td>\r\n                            <td>\r\n                              <Edit />\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                    </tbody>\r\n                  ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                Fruits\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <table className=\"table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Item Name</th>\r\n                      <th>Color</th>\r\n                      <th>Options</th>\r\n                      <th>SKU ID</th>\r\n                      <th>Stocks</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {allInventories.map((inventory) => (\r\n                    <tbody key={inventory._id}>\r\n                      {inventory.name === fruits &&\r\n                        inventory.details.map((sub) => (\r\n                          <tr key={sub._id}>\r\n                            <td>{sub.name}</td>\r\n                            <td>{sub.color}</td>\r\n                            <td>{sub.options}</td>\r\n                            <td>{sub.skuid}</td>\r\n                            <td>{sub.stocks}</td>\r\n                            <td>\r\n                              <Toggle\r\n                                isToggle={sub.isToggle}\r\n                                handleToggle={() => {\r\n                                  this.handleToggle(sub);\r\n                                }}\r\n                              />\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                    </tbody>\r\n                  ))}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","import './App.css';\nimport Inventory from './components/inventory';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Inventory/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}